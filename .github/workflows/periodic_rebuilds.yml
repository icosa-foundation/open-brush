---
# yamllint disable rule:line-length
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Periodic PR Rebuilds

on:  # yamllint disable-line rule:truthy
  schedule:
    - cron: '14 3 1 * *'  # Monthly, 1st of the month, 03:14 UTC
  workflow_dispatch:

jobs:
  find-and-rerun-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find open PRs with label 'periodic rebuild'
        run: |
          echo "Finding PRs with label 'periodic rebuild'..."
          gh pr list --state open --label "periodic rebuild" --json number,title,headRefName | tee prs.json
          cat prs.json | jq -r '.[] | "PR #" + (.number|tostring) + ": " + .title + " (branch: " + .headRefName + ")"'
          cat prs.json | jq '.[].number' > prs.txt
          echo "Total PRs found:" $(wc -l < prs.txt)
        env:
          GH_TOKEN: ${{ secrets.REBUILD_PAT }}

      - name: Get workflow ID for build.yml
        id: get_workflow_id
        run: |
          workflow_id=$(gh api repos/${{ github.repository }}/actions/workflows --jq '.workflows[] | select(.path==".github/workflows/build.yml") | .id')
          if [ -z "$workflow_id" ]; then
            echo "Error: Couldn't find workflow_id for build.yml"
            exit 1
          fi
          echo "Workflow ID for build.yml: $workflow_id"
          echo "workflow_id=$workflow_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.REBUILD_PAT }}

      - name: Rerun last build workflow for each PR
        run: |
          set -e
          if [ ! -s prs.txt ]; then
            echo "No PRs to process."
            exit 0
          fi

          workflow_id="${{ steps.get_workflow_id.outputs.workflow_id }}"
          echo "Using workflow_id: $workflow_id"

          while read pr_number; do
            echo "----------------------"
            echo "Processing PR #$pr_number"

            pr_branch=$(jq -r '.[] | select(.number=='"$pr_number"') | .headRefName' prs.json)
            echo "PR branch: $pr_branch"

            echo "Finding latest workflow run for 'Builds' on branch '$pr_branch'..."

            workflow_run=$(gh api "repos/${{ github.repository }}/actions/workflows/$workflow_id/runs?branch=$pr_branch&event=pull_request" \
              --jq '.workflow_runs[] | select(.name=="Builds")' | jq -s 'sort_by(.created_at) | reverse | .[0]')

            if [ "$workflow_run" = "null" ] || [ -z "$workflow_run" ]; then
              echo "No 'Builds' workflow run found for PR #$pr_number (branch: $pr_branch)"
              continue
            fi

            run_id=$(echo "$workflow_run" | jq -r '.id')
            run_status=$(echo "$workflow_run" | jq -r '.status')
            run_conclusion=$(echo "$workflow_run" | jq -r '.conclusion')
            run_created_at=$(echo "$workflow_run" | jq -r '.created_at')
            echo "Found workflow run:"
            echo "  ID: $run_id"
            echo "  Status: $run_status"
            echo "  Conclusion: $run_conclusion"
            echo "  Created At: $run_created_at"

            if [ -z "$run_id" ] || [ "$run_id" = "null" ]; then
              echo "Workflow run ID is null; skipping."
              continue
            fi

            echo "Rerunning workflow run ID $run_id..."
            gh api -X POST repos/${{ github.repository }}/actions/runs/$run_id/rerun
            echo "Rerun triggered for run ID $run_id."
          done < prs.txt
        env:
          GH_TOKEN: ${{ secrets.REBUILD_PAT }}

      - name: Clean up
        run: rm -f prs.json prs.txt
