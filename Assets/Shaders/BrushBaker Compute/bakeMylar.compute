#pragma kernel CSMain

uniform float4x4 TransformObjectToWorld;

RWStructuredBuffer<float3> vertexBuffer;
StructuredBuffer<float3> normalBuffer;
StructuredBuffer<float4> colorBuffer;
StructuredBuffer<float3> uvBuffer;

float _SqueezeAmount;

[numthreads(8, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID) {
    float3 vertex = vertexBuffer[id.x];
    float3 uv = uvBuffer[id.x];
    const float radius = uv.z;
    const float squeeze = sin(uv.x * 3.14159);
    const float3 squeeze_displacement = radius * normalBuffer[id.x] * squeeze;
    vertex -= squeeze_displacement * _SqueezeAmount;
    vertexBuffer[id.x] = vertex;
}
