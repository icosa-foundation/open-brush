#pragma kernel CSMain

uniform float4x4 TransformObjectToWorld;

RWStructuredBuffer<float3> vertexBuffer;
StructuredBuffer<float3> normalBuffer;
StructuredBuffer<float4> colorBuffer;
StructuredBuffer<float3> uvBuffer;

float _SqueezeAmount;

[numthreads(8, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID) {
    float3 vertex = vertexBuffer[id.x];
    float3 normal = normalBuffer[id.x];
    float3 uv0 = uvBuffer[id.x];

    // Inflate the tube outward to explode it into
    // strips - giving us negative space w/o as much overdraw.
    float bulge = 2.25;
    float radius = uv0.z;
    vertex.xyz += normal.xyz * bulge * radius;

    vertexBuffer[id.x] = vertex;
}
