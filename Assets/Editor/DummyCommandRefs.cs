// Copyright 2020 The Tilt Brush Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using GlobalCommands = TiltBrush.SketchControlsScript.GlobalCommands;
namespace TiltBrush
{
    /// Auto-generated by Support/bin/analyze_refgraph.py --recreate
    /// The purpose of this file is to make it easier to find GlobalCommand references
    /// which come from serialized data.
    public static class DummyCommandRefs
    {
        static void Use(GlobalCommands c) { UnityEngine.Debug.Log(c.ToString()); }

        public static void Prefabs_Debug_UxExperiment()
        {
            Use(GlobalCommands.AdvancedTools);
            Use(GlobalCommands.LightingLdr);
            Use(GlobalCommands.Redo);
            Use(GlobalCommands.StraightEdge);
            Use(GlobalCommands.SymmetryPlane);
            Use(GlobalCommands.Undo);
        }

        public static void Prefabs_Panels_AdminPanel()
        {
            Use(GlobalCommands.AdvancedPanelsToggle);
            Use(GlobalCommands.MemoryExceeded);
            Use(GlobalCommands.MorePanels);
            Use(GlobalCommands.NewSketch);
            Use(GlobalCommands.SaveGallery);
            Use(GlobalCommands.SaveOptions);
            Use(GlobalCommands.ShowWindowGUI);
            Use(GlobalCommands.Sketchbook);
            Use(GlobalCommands.ToggleSettings);
            Use(GlobalCommands.UploadToGenericCloud);
        }

        public static void Prefabs_Panels_AdminPanel_Mobile()
        {
            Use(GlobalCommands.AdvancedPanelsToggle);
            Use(GlobalCommands.MemoryExceeded);
            Use(GlobalCommands.MorePanels);
            Use(GlobalCommands.NewSketch);
            Use(GlobalCommands.SaveGallery);
            Use(GlobalCommands.SaveOptions);
            Use(GlobalCommands.ShowWindowGUI);
            Use(GlobalCommands.Sketchbook);
            Use(GlobalCommands.ToggleSettings);
            Use(GlobalCommands.UploadToGenericCloud);
        }

        public static void Prefabs_Panels_AdvancedToolsPanel()
        {
            Use(GlobalCommands.AdvancedTools);
            Use(GlobalCommands.SelectAll);
            Use(GlobalCommands.StraightEdge);
            Use(GlobalCommands.SymmetryPlane);
        }

        public static void Prefabs_Panels_AdvancedToolsPanel_Mobile()
        {
            Use(GlobalCommands.AdvancedTools);
            Use(GlobalCommands.Cameras);
            Use(GlobalCommands.SelectAll);
            Use(GlobalCommands.StraightEdge);
            Use(GlobalCommands.SymmetryPlane);
        }

        public static void Prefabs_Panels_BackdropPanel()
        {
            Use(GlobalCommands.LightingLdr);
        }

        public static void Prefabs_Panels_BrushesPanel()
        {
            Use(GlobalCommands.AudioVisualization);
        }

        public static void Prefabs_Panels_BrushesPanel_Mobile()
        {
            Use(GlobalCommands.AudioVisualization);
        }

        public static void Prefabs_Panels_BrushesPanel_experimental()
        {
            Use(GlobalCommands.AudioVisualization);
            Use(GlobalCommands.Null);
        }

        public static void Prefabs_Panels_CameraPanel()
        {
            Use(GlobalCommands.CameraOptions);
            Use(GlobalCommands.ToggleCameraPostEffects);
            Use(GlobalCommands.ToggleWatermark);
        }

        public static void Prefabs_Panels_CameraPathPanel()
        {
            Use(GlobalCommands.DeleteCameraPath);
            Use(GlobalCommands.RecordCameraPath);
            Use(GlobalCommands.SelectCameraPath);
            Use(GlobalCommands.ToggleCameraPathPreview);
            Use(GlobalCommands.ToggleCameraPathVisuals);
        }

        public static void Prefabs_Panels_ColorPickerPanel()
        {
            Use(GlobalCommands.Null);
        }

        public static void Prefabs_Panels_ExperimentalPanel()
        {
            Use(GlobalCommands.DoAutoProfile);
            Use(GlobalCommands.DraftingVisibility);
            Use(GlobalCommands.Null);
            Use(GlobalCommands.SaveModel);
            Use(GlobalCommands.StraightEdge);
            Use(GlobalCommands.SymmetryFour);
        }

        public static void Prefabs_Panels_ExtraPanel()
        {
            Use(GlobalCommands.AdvancedTools);
            Use(GlobalCommands.LightingLdr);
            Use(GlobalCommands.MorePanels);
        }

        public static void Prefabs_Panels_ExtraPanel_Mobile()
        {
            Use(GlobalCommands.AdvancedTools);
            Use(GlobalCommands.LightingLdr);
            Use(GlobalCommands.MorePanels);
        }

        public static void Prefabs_Panels_GuideToolsPanel()
        {
            Use(GlobalCommands.DraftingVisibility);
            Use(GlobalCommands.StencilsDisabled);
        }

        public static void Prefabs_Panels_LabsPanel()
        {
            Use(GlobalCommands.DropCam);
            Use(GlobalCommands.ExportRaw);
            Use(GlobalCommands.IRC);
            Use(GlobalCommands.Tiltasaurus);
            Use(GlobalCommands.YouTubeChat);
        }

        public static void Prefabs_Panels_LabsPanel_Mobile()
        {
            Use(GlobalCommands.ExportRaw);
            Use(GlobalCommands.Tiltasaurus);
        }

        public static void Prefabs_Panels_LightsPanel()
        {
            Use(GlobalCommands.LightingHdr);
            Use(GlobalCommands.LightingLdr);
        }

        public static void Prefabs_Panels_MemoryWarningPanel()
        {
            Use(GlobalCommands.MemoryExceeded);
            Use(GlobalCommands.MemoryWarning);
        }

        public static void Prefabs_Panels_PolyPanel()
        {
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.ViewPolyGallery);
            Use(GlobalCommands.ViewPolyPage);
        }

        public static void Prefabs_Panels_PolyPanel_Mobile()
        {
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.ViewPolyGallery);
            Use(GlobalCommands.ViewPolyPage);
        }

        public static void Prefabs_Panels_ReferencePanel_ReferencePanel_Mobile()
        {
            Use(GlobalCommands.ShowQuestSideLoading);
        }

        public static void Prefabs_Panels_ReferencePanel_ReferencePanel_NoDataPopup_Mobile()
        {
            Use(GlobalCommands.ShowQuestSideLoading);
        }

        public static void Prefabs_Panels_SettingsPanel()
        {
            Use(GlobalCommands.About);
            Use(GlobalCommands.AshleysSketch);
            Use(GlobalCommands.Credits);
            Use(GlobalCommands.FAQ);
            Use(GlobalCommands.StraightEdgeMeterDisplay);
            Use(GlobalCommands.ToggleAutosimplification);
            Use(GlobalCommands.ToggleSettings);
        }

        public static void Prefabs_Panels_SettingsPanel_Mobile()
        {
            Use(GlobalCommands.About);
            Use(GlobalCommands.AshleysSketch);
            Use(GlobalCommands.Credits);
            Use(GlobalCommands.FAQ);
            Use(GlobalCommands.ReleaseNotes);
            Use(GlobalCommands.ShowPrivacy);
            Use(GlobalCommands.ShowTos);
            Use(GlobalCommands.ShowWindowGUI);
            Use(GlobalCommands.StraightEdgeMeterDisplay);
            Use(GlobalCommands.ToggleAutosimplification);
            Use(GlobalCommands.ToggleSettings);
        }

        public static void Prefabs_Panels_SketchbookPanel()
        {
            Use(GlobalCommands.DeleteSketch);
            Use(GlobalCommands.GoogleDriveSync);
            Use(GlobalCommands.Load);
            Use(GlobalCommands.LoadConfirmComplex);
            Use(GlobalCommands.LoadConfirmComplexHigh);
            Use(GlobalCommands.LoadWaitOnDownload);
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.NewSketch);
            Use(GlobalCommands.ReadOnlyNotice);
            Use(GlobalCommands.ShowWindowGUI);
            Use(GlobalCommands.Sketchbook);
            Use(GlobalCommands.SketchbookMenu);
            Use(GlobalCommands.ViewOnlineGallery);
        }

        public static void Prefabs_Panels_SketchbookPanel_Mobile()
        {
            Use(GlobalCommands.DeleteSketch);
            Use(GlobalCommands.GoogleDriveSync);
            Use(GlobalCommands.Load);
            Use(GlobalCommands.LoadConfirmComplex);
            Use(GlobalCommands.LoadConfirmComplexHigh);
            Use(GlobalCommands.LoadWaitOnDownload);
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.NewSketch);
            Use(GlobalCommands.ReadOnlyNotice);
            Use(GlobalCommands.ShowWindowGUI);
            Use(GlobalCommands.Sketchbook);
            Use(GlobalCommands.SketchbookMenu);
            Use(GlobalCommands.ViewOnlineGallery);
        }

        public static void Prefabs_Panels_TestingPanel()
        {
            Use(GlobalCommands.Null);
        }

        public static void Prefabs_Panels_ToolsPanel()
        {
            Use(GlobalCommands.LightingLdr);
            Use(GlobalCommands.MorePanels);
            Use(GlobalCommands.Redo);
            Use(GlobalCommands.StraightEdge);
            Use(GlobalCommands.SymmetryPlane);
            Use(GlobalCommands.Undo);
        }

        public static void Prefabs_Panels_ToolsPanel_Mobile()
        {
            Use(GlobalCommands.LightingLdr);
            Use(GlobalCommands.MorePanels);
            Use(GlobalCommands.Redo);
            Use(GlobalCommands.StraightEdge);
            Use(GlobalCommands.SymmetryPlane);
            Use(GlobalCommands.Undo);
        }

        public static void Prefabs_Panels_Widgets_OptionButton()
        {
            Use(GlobalCommands.LightingLdr);
        }

        public static void Prefabs_PopUps_PopUpWindow_Accounts()
        {
            Use(GlobalCommands.AccountInfo);
            Use(GlobalCommands.GoogleDriveSync);
            Use(GlobalCommands.GoogleDriveSync_Folder);
            Use(GlobalCommands.LogOutOfGenericCloud);
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.Null);
            Use(GlobalCommands.ShowGoogleDrive);
            Use(GlobalCommands.SignOutConfirm);
        }

        public static void Prefabs_PopUps_PopUpWindow_AccountsMobile()
        {
            Use(GlobalCommands.AccountInfo);
            Use(GlobalCommands.GoogleDriveSync);
            Use(GlobalCommands.GoogleDriveSync_Folder);
            Use(GlobalCommands.LogOutOfGenericCloud);
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.Null);
            Use(GlobalCommands.ShowGoogleDrive);
            Use(GlobalCommands.SignOutConfirm);
        }

        public static void Prefabs_PopUps_PopUpWindow_CameraPaths()
        {
            Use(GlobalCommands.SelectCameraPath);
        }

        public static void Prefabs_PopUps_PopUpWindow_ColorPickerLdr()
        {
            Use(GlobalCommands.Disco);
        }

        public static void Prefabs_PopUps_PopUpWindow_EnableDriveSync()
        {
            Use(GlobalCommands.GoogleDriveSync);
            Use(GlobalCommands.GoogleDriveSync_Folder);
            Use(GlobalCommands.ShowGoogleDrive);
        }

        public static void Prefabs_PopUps_PopUpWindow_EnableDriveSyncMobile()
        {
            Use(GlobalCommands.GoogleDriveSync);
            Use(GlobalCommands.GoogleDriveSync_Folder);
            Use(GlobalCommands.ShowGoogleDrive);
        }

        public static void Prefabs_PopUps_PopUpWindow_Help()
        {
            Use(GlobalCommands.FAQ);
            Use(GlobalCommands.ReleaseNotes);
        }

        public static void Prefabs_PopUps_PopUpWindow_HelpMobile()
        {
            Use(GlobalCommands.FAQ);
            Use(GlobalCommands.ReleaseNotes);
            Use(GlobalCommands.ShowPrivacy);
            Use(GlobalCommands.ShowTos);
        }

        public static void Prefabs_PopUps_PopUpWindow_Panels()
        {
            Use(GlobalCommands.ResetAllPanels);
            Use(GlobalCommands.ToggleSettings);
        }

        public static void Prefabs_PopUps_PopUpWindow_PanelsMobile()
        {
            Use(GlobalCommands.ResetAllPanels);
            Use(GlobalCommands.ToggleSettings);
        }

        public static void Prefabs_PopUps_PopUpWindow_SketchbookMenu()
        {
            Use(GlobalCommands.DeleteSketch);
            Use(GlobalCommands.ShowSketchFolder);
        }

        public static void Prefabs_PopUps_PopUpWindow_SketchbookMenuMobile()
        {
            Use(GlobalCommands.DeleteSketch);
        }

        public static void Prefabs_PopUps_PopupWindow_CameraOptions()
        {
            Use(GlobalCommands.CameraOptions);
        }

        public static void Prefabs_PopUps_PopupWindow_MirrorOptions()
        {
            Use(GlobalCommands.SummonMirror);
            Use(GlobalCommands.SymmetryPlane);
        }

        public static void Prefabs_PopUps_PopupWindow_SaveOptions()
        {
            Use(GlobalCommands.Save);
            Use(GlobalCommands.SaveGallery);
        }

        public static void Prefabs_PopUps_PopupWindow_SelectionOptions()
        {
            Use(GlobalCommands.FlipSelection);
            Use(GlobalCommands.InvertSelection);
            Use(GlobalCommands.SelectAll);
        }

        public static void Prefabs_PopUps_PopupWindow_SelectionOptionsGroup()
        {
            Use(GlobalCommands.FlipSelection);
            Use(GlobalCommands.InvertSelection);
            Use(GlobalCommands.Null);
            Use(GlobalCommands.SelectAll);
            Use(GlobalCommands.ToggleGroupStrokesAndWidgets);
        }

        public static void Prefabs_PopUps_PopupWindow_Upload()
        {
            Use(GlobalCommands.CancelUpload);
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.UploadToGenericCloud);
        }

        public static void Prefabs_PopUps_PopupWindow_UploadMobile()
        {
            Use(GlobalCommands.CancelUpload);
            Use(GlobalCommands.LoginToGenericCloud);
            Use(GlobalCommands.UploadToGenericCloud);
            Use(GlobalCommands.ViewLastUpload);
        }

        public static void Prefabs_Tutorials_Tutorial_Point()
        {
            Use(GlobalCommands.AudioVisualization);
            Use(GlobalCommands.DeleteSketch);
            Use(GlobalCommands.ExportRaw);
            Use(GlobalCommands.IRC);
            Use(GlobalCommands.Tiltasaurus);
            Use(GlobalCommands.YouTubeChat);
        }

        public static void Prefabs_UIComponents_SelectionTray()
        {
            Use(GlobalCommands.FlipSelection);
            Use(GlobalCommands.InvertSelection);
            Use(GlobalCommands.SelectAll);
            Use(GlobalCommands.ToggleGroupStrokesAndWidgets);
        }

        public static void Prefabs_UIComponents_SelectionTray_Mobile()
        {
            Use(GlobalCommands.FlipSelection);
            Use(GlobalCommands.ToggleGroupStrokesAndWidgets);
        }

        public static void Prefabs_UIComponents_YouTubePlayer()
        {
            Use(GlobalCommands.LoginToGenericCloud);
        }
    }
}
