#if UNITY_EDITOR || FBXSDK_RUNTIME
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Autodesk.Fbx {

public class FbxStatus : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxStatus(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxStatus obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxStatus() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NativeMethods.delete_FbxStatus(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxStatus() : this(NativeMethods.new_FbxStatus__SWIG_0(), true) {
  }

  public FbxStatus(FbxStatus.EStatusCode pCode) : this(NativeMethods.new_FbxStatus__SWIG_1((int)pCode), true) {
  }

  public FbxStatus(FbxStatus rhs) : this(NativeMethods.new_FbxStatus__SWIG_2(FbxStatus.getCPtr(rhs)), true) {
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
  }

  private bool _equals(FbxStatus rhs) {
    bool ret = NativeMethods.FbxStatus__equals(swigCPtr, FbxStatus.getCPtr(rhs));
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Error() {
    bool ret = NativeMethods.FbxStatus_Error(swigCPtr);
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Clear() {
    NativeMethods.FbxStatus_Clear(swigCPtr);
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
  }

  public FbxStatus.EStatusCode GetCode() {
    FbxStatus.EStatusCode ret = (FbxStatus.EStatusCode)NativeMethods.FbxStatus_GetCode(swigCPtr);
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetCode(FbxStatus.EStatusCode rhs) {
    NativeMethods.FbxStatus_SetCode__SWIG_0(swigCPtr, (int)rhs);
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
  }

  public string GetErrorString() {
    string ret = NativeMethods.FbxStatus_GetErrorString(swigCPtr);
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equals(FbxStatus other) {
    if (object.ReferenceEquals(other, null)) { return false; }
    return _equals(other);
  }

  public override bool Equals(object obj){
    if (object.ReferenceEquals(obj, null)) { return false; }
    /* is obj a subclass of this type; if so use our Equals */
    var typed = obj as FbxStatus;
    if (!object.ReferenceEquals(typed, null)) {
      return this.Equals(typed);
    }
    /* are we a subclass of the other type; if so use their Equals */
    if (typeof(FbxStatus).IsSubclassOf(obj.GetType())) {
      return obj.Equals(this);
    }
    /* types are unrelated; can't be a match */
    return false;
  }

  public static bool operator == (FbxStatus a, FbxStatus b) {
    if (object.ReferenceEquals(a, b)) { return true; }
    if (object.ReferenceEquals(a, null) || object.ReferenceEquals(b, null)) { return false; }
    return a.Equals(b);
  }

  public static bool operator != (FbxStatus a, FbxStatus b) {
    return !(a == b);
  }

  public override int GetHashCode() { return (int)GetCode(); }
  public static bool operator == (EStatusCode a, FbxStatus b) { return (b != null ? a == b.GetCode() : false); }
  public static bool operator != (EStatusCode a, FbxStatus b) { return (b != null ? a != b.GetCode() : false); }
  public static bool operator == (FbxStatus a, EStatusCode b) { return (a != null ? a.GetCode() == b : false); }
  public static bool operator != (FbxStatus a, EStatusCode b) { return (a != null ? a.GetCode() != b : false); }

  public override string ToString() {
    return GetCode().ToString() + ": " + GetErrorString();
  } 
  public void SetCode(FbxStatus.EStatusCode rhs, string pErrorMsg) {
    NativeMethods.FbxStatus_SetCode__SWIG_1(swigCPtr, (int)rhs, pErrorMsg);
    if (NativeMethods.SWIGPendingException.Pending) throw NativeMethods.SWIGPendingException.Retrieve();
  }

  public enum EStatusCode {
    eSuccess = 0,
    eFailure,
    eInsufficientMemory,
    eInvalidParameter,
    eIndexOutOfRange,
    ePasswordError,
    eInvalidFileVersion,
    eInvalidFile,
    eSceneCheckFail
  }

}

}

#endif // UNITY_EDITOR || FBXSDK_RUNTIME